name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install liboqs (pre-built package)
      run: |
        # Download and install pre-built liboqs - much faster than building from source!
        wget https://github.com/open-quantum-safe/liboqs/releases/download/v0.8.0/liboqs-0.8.0-linux-x64.tar.gz
        sudo tar -xzf liboqs-0.8.0-linux-x64.tar.gz -C /usr/local
        sudo ldconfig
        echo "liboqs installed in 30 seconds instead of 3+ minutes!"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .

    - name: Run tests
      run: |
        pytest tests/ -v --tb=short

    - name: Run linting
      run: |
        ruff check src/ tests/
        ruff format --check src/ tests/

    - name: Run type checking
      run: |
        mypy src/ tests/

  build-c:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install liboqs (pre-built package)
      run: |
        # Same simple installation - no complex artifacts or caching needed!
        wget https://github.com/open-quantum-safe/liboqs/releases/download/v0.8.0/liboqs-0.8.0-linux-x64.tar.gz
        sudo tar -xzf liboqs-0.8.0-linux-x64.tar.gz -C /usr/local
        sudo ldconfig

    - name: Build C demos
      run: |
        mkdir -p build
        cd build
        cmake ..
        make -j$(nproc)

    - name: Test C demos
      run: |
        cd build
        echo "Testing C demo compilation success"

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t pqc-lab:test .

    - name: Test Docker image
      run: |
        docker run --rm pqc-lab:test pqc-lab --help
        docker run --rm pqc-lab:test python -c "import pqc_lab; print('Import successful')"

  security:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        pip install safety bandit

    - name: Check for known security vulnerabilities
      run: |
        safety check

    - name: Run security linting
      run: |
        bandit -r src/ -f json -o bandit-report.json || true
        echo "Security scan completed"
